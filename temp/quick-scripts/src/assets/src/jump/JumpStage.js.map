{"version":3,"sources":["assets\\src\\jump\\JumpStage.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Block } from \"./JumpBlock\";\nimport { Player } from \"./JumpPlayer\";\nimport { JumpScene } from \"./JumpScene\";\n\nconst { ccclass, property, executeInEditMode } = cc._decorator;\n\n@ccclass\n// @executeInEditMode\nexport class Stage extends cc.Component {\n\n    @property(Player)\n    private player: Player = null;\n    @property(cc.Node)\n    private groundLayer: cc.Node = null;\n    @property(cc.Integer)\n    private gridNum: number = 20;\n    @property(cc.Graphics)\n    private g: cc.Graphics = null;\n    @property(cc.Integer)\n    private minBlockSpace: number = 1;//两个block最小间距\n    @property(cc.Integer)\n    private maxBlockSpace: number = 10;\n    @property(cc.Integer)\n    private minBlockLength: number = 1;\n    @property(cc.Integer)\n    private maxBlockLength: number = 7;\n    @property(cc.Float)\n    private cameraMoveDuration: number = 1;\n    @property(cc.Node)\n    private endScene: cc.Node = null;\n\n    private jumpScene: JumpScene = null;\n    private gridWidth: number = 32;\n    private groundOrigin: cc.Vec2 = cc.v2();\n    private offset: number = 0;\n    private currBlock: Block = null;// 同一屏只出现两个block，玩家站的是这个\n    private nextBlock: Block = null;\n\n    private playerIndex: number = null;\n    private animState: cc.AnimationState = null;\n    private isMovingStage: boolean = false;\n\n    onLoad() {\n        this.gridWidth = Math.floor(this.groundLayer.width / this.gridNum);\n        this.groundOrigin = this.groundLayer.position;\n    }\n\n    public init(jumpScene: JumpScene) {\n        this.jumpScene = jumpScene;\n    }\n\n    public showStartStory(cb, cbTarget) {\n        this.g.clear();\n        this.drawBlock(new Block(0, 5));\n        this.drawBlock(new Block(9, 5));\n        let anim = this.getComponent(cc.Animation);\n        anim.once(\"finished\", () => {\n            cb();\n        }, cbTarget);\n        this.animState = anim.play(\"start\");\n    }\n\n    public startGame() {\n        this.reset();\n    }\n\n    public endGame(cb, cbTarget) {\n        this.g.clear();\n        this.scheduleOnce(() => {\n            this.endScene.active = true;\n        }, 5);\n        this.scheduleOnce(() => {\n            this.player.node.getChildByName(\"name\").getComponent(cc.Label).string = \"\";\n        }, 10);\n        this.scheduleOnce(() => {\n            this.player.node.children.forEach((child) => {\n                child.color = new cc.Color().fromHEX(\"#58D639\");\n                let streak = this.player.getComponent(cc.MotionStreak);\n                streak.color = new cc.Color().fromHEX(\"#58D639\")\n            });\n        }, 15);\n        this.scheduleOnce(() => {\n            this.player.readyJump();\n        }, 20);\n        this.scheduleOnce(() => {\n            let far = cc.v2(this.player.node.x - 1000, this.player.node.y);\n            this.player.jumpTo(far, cb, cbTarget);\n        }, 25);\n\n    }\n\n    public reset() {\n        this.groundLayer.position = this.groundOrigin;\n        this.g.clear();\n        this.currBlock = new Block(0, 5);\n        this.nextBlock = new Block(9, 5);\n        this.drawBlock(this.currBlock);\n        this.drawBlock(this.nextBlock);\n        let center = this.currBlock.head + Math.floor(this.currBlock.length / 2);\n        this.playerIndex = center;\n        this.player.node.position = cc.v2(center * this.gridWidth + this.gridWidth / 2, 0);\n        this.isMovingStage = false;\n    }\n\n    private drawBlock(block: Block) {\n        this.g.rect(block.head * this.gridWidth, - this.gridWidth, this.gridWidth * block.length,this.gridWidth);\n        this.g.fill();\n    }\n\n    public addNewBlock() {\n        let cb = () => {\n            this.currBlock = this.nextBlock;\n            let space = Math.floor(this.minBlockSpace + Math.random() * (this.maxBlockSpace - this.minBlockSpace));\n            let head = this.currBlock.head + this.currBlock.length + space;\n            let length = Math.floor(this.minBlockLength + Math.random() * (this.maxBlockLength - this.minBlockLength));\n            this.nextBlock = new Block(head, length);\n            this.drawBlock(this.nextBlock);\n        }\n        this.moveStage(cb, this);\n    }\n\n    private moveStage(cb: Function, target: any) {\n        this.isMovingStage = true;\n        let moveLength = (this.nextBlock.head - this.currBlock.head) * this.gridWidth;\n        let moveAction = cc.moveBy(this.cameraMoveDuration, -moveLength, 0);\n        let action = cc.sequence(moveAction, cc.callFunc(() => {\n            this.isMovingStage = false;\n            cb();\n        }, target));\n        this.groundLayer.runAction(action);\n    }\n\n    private canReadyJump() {\n        return !this.isMovingStage && this.player.speed === 0;\n    }\n\n    public playerReadyJump() {\n        if (this.canReadyJump()) {\n            this.player.readyJump();\n        }\n    }\n\n    public ignoreStory() {\n        this.animState.speed = 4;\n    }\n\n    public playerDie(cb, cbTarget) {\n        let action = cc.sequence(cc.moveBy(1, 0, -1000), cc.callFunc(cb, cbTarget));\n        this.player.node.runAction(action);\n    }\n\n    public playerJump(cb, target) {\n        if (!this.player.isReadyJump) {\n            return;\n        }\n        let jumpGrids = Math.round(this.player.jumpDistance / this.gridWidth);\n        let targetGrid = this.playerIndex + jumpGrids;\n        let targetPos = cc.v2(this.gridWidth * targetGrid + this.gridWidth / 2, 0);\n        this.player.jumpTo(targetPos, () => {\n            this.playerIndex = targetGrid;\n            if (targetGrid <= this.currBlock.tail) {\n                cb(this.playerIndex, false);\n            } else if (targetGrid >= this.nextBlock.head && targetGrid <= this.nextBlock.tail) {\n                cb(this.playerIndex, true);\n            } else {\n                cb(-1, false);\n            }\n        }, this);\n    }\n\n}\n"]}