{"version":3,"sources":["assets\\src\\jump\\JumpPlayer.ts"],"names":[],"mappings":";;;;;;AAAM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA4B,0BAAY;IAAxC;QAAA,qEA6CC;QAzCU,WAAK,GAAW,CAAC,CAAC;QAElB,eAAS,GAAW,CAAC,CAAC;QAEtB,kBAAY,GAAW,CAAC,CAAC;QAEzB,WAAK,GAAW,CAAC,CAAC;QAElB,iBAAW,GAAY,KAAK,CAAC;QAE7B,eAAS,GAAW,CAAC,CAAC;;IA+BjC,CAAC;IA7BU,0BAAS,GAAhB;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,GAAG,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;IAEM,uBAAM,GAAb,UAAc,SAAiB,EAAC,EAAW,EAAC,QAAa;QAAzD,iBAcC;QAbG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC3B,mEAAmE;QACnE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,WAAW,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACpC,IAAI,UAAU,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAC,SAAS,EAAC,GAAG,EAAC,CAAC,CAAC,CAAC;QAChD,0DAA0D;QAC1D,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;YACvB,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACtB,EAAE,EAAE,CAAC;QACT,CAAC,EAAC,QAAQ,CAAC,CAAC;QACZ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC,CAAA;IACzD,CAAC;IAEM,uBAAM,GAAb,UAAc,EAAE;QACZ,IAAG,IAAI,CAAC,WAAW,EAAE;YACjB,IAAI,CAAC,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAC9B,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;SACxC;IACL,CAAC;IAvCD;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;yCACI;IAEzB;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;6CACU;IANpB,MAAM;QADlB,OAAO;OACK,MAAM,CA6ClB;IAAD,aAAC;CA7CD,AA6CC,CA7C2B,EAAE,CAAC,SAAS,GA6CvC;AA7CY,wBAAM","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport class Player extends cc.Component {\n\n    \n    @property(cc.Integer)\n    public power: number = 0;\n    @property(cc.Float)\n    public initSpeed: number = 0;\n\n    public jumpDistance: number = 0;\n\n    public speed: number = 0;\n\n    public isReadyJump: boolean = false;\n\n    public direction: number = 1;\n\n    public readyJump() {\n        this.node.runAction(cc.scaleTo(2,1,0.5));\n        this.speed = this.initSpeed;\n        this.isReadyJump = true;\n    }\n\n    public jumpTo(targetPos:cc.Vec2,cb:Function,cbTarget?:any) {\n        this.node.stopAllActions();\n        // let targetPos = this.node.parent.convertToNodeSpaceAR(worldPos);\n        this.isReadyJump = false;\n        let resetAction = cc.scaleTo(1,1,1);\n        let jumpAction = cc.jumpTo(0.5,targetPos,200,1);\n        // let rotateAction = cc.rotateBy(0.5,this.direction*360);\n        let finished = cc.callFunc(()=>{\n            this.speed = 0;\n            this.jumpDistance = 0;\n            cb();\n        },cbTarget);\n        this.node.runAction(resetAction);\n        this.node.runAction(cc.sequence(jumpAction,finished))\n    }\n\n    public update(dt) {\n        if(this.isReadyJump) {\n            this.speed += dt * this.power;\n            this.jumpDistance += this.speed * dt;\n        }\n    }\n\n}\n"]}