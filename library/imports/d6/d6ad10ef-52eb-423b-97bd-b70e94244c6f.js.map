{"version":3,"sources":["assets\\src\\2048\\M2048Scene.ts"],"names":[],"mappings":";;;;;;AAAA,2CAA0C;AAC1C,0BAAyB;AACzB,mDAA8C;AAExC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAgC,8BAAY;IAA5C;QAAA,qEA0DC;QAxDW,WAAK,GAAe,IAAI,CAAC;QAE1B,WAAK,GAAU,sBAAK,CAAC,IAAI,CAAC;;IAsDrC,CAAC;IApDG,0BAAK,GAAL;QACI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,8BAAS,GAAT;QACI,IAAI,CAAC,KAAK,GAAG,sBAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,KAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAClC,CAAC;IAED,6BAAQ,GAAR;QACI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;QACpC,KAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,GAAG,EAC1B,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,cAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,GAAG,sBAAK,CAAC,IAAI,CAAC;IAC5B,CAAC;IAED,gCAAW,GAAX;QACI,KAAC,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAED,iCAAY,GAAZ;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,gCAAW,GAAX,UAAY,GAAQ;QAChB,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,QAAQ,GAAG,EAAE;YACT,KAAK,oBAAG,CAAC,IAAI;gBACT,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;gBAChC,MAAM;YACV,KAAK,oBAAG,CAAC,KAAK;gBACV,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;gBACjC,MAAM;YACV,KAAK,oBAAG,CAAC,EAAE;gBACP,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;gBAC9B,MAAM;YACV,KAAK,oBAAG,CAAC,IAAI;gBACT,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;gBAChC,MAAM;YACV;gBACI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACjB,MAAM;SACb;QACD,IAAI,MAAM,EAAE;YACR,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE;gBACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;SACJ;IACL,CAAC;IAtDD;QADC,QAAQ,CAAC,uBAAU,CAAC;6CACY;IAFxB,UAAU;QADtB,OAAO;OACK,UAAU,CA0DtB;IAAD,iBAAC;CA1DD,AA0DC,CA1D+B,EAAE,CAAC,SAAS,GA0D3C;AA1DY,gCAAU","file":"","sourceRoot":"/","sourcesContent":["import { M2048Board } from \"./M2048Board\";\nimport { G } from \"../G\";\nimport { DIR, STATE } from \"./M2048Constants\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport class M2048Scene extends cc.Component {\n    @property(M2048Board)\n    private board: M2048Board = null;\n\n    public state: STATE = STATE.NONE;\n\n    start() {\n        this.board.init(this);\n        this.startGame();\n    }\n\n    startGame() {\n        this.state = STATE.START;\n        this.board.reset();\n        G.gameRoot.showTip(\"四方向手势滑动\");\n    }\n\n    overGame() {\n        let max = this.board.getMaxNLabel();\n        G.gameRoot.showMaskMessage(max,\n            { label: \"OK\", cb: () => { }, target: this });\n        this.state = STATE.OVER;\n    }\n\n    onBtnReturn() {\n        G.returnHall();\n    }\n\n    onBtnRestart() {\n        this.startGame();\n    }\n\n    onBoardSlid(dir: DIR) {\n        let isMove = false;\n        switch (dir) {\n            case DIR.LEFT:\n                isMove = this.board.slideLeft();\n                break;\n            case DIR.RIGHT:\n                isMove = this.board.slideRight();\n                break;\n            case DIR.UP:\n                isMove = this.board.slideUp();\n                break;\n            case DIR.DOWN:\n                isMove = this.board.slideDown();\n                break;\n            default:\n                cc.error(\"方向错误\");\n                break;\n        }\n        if (isMove) {\n            if (this.board.judgeOver()) {\n                this.overGame();\n            }\n        }\n    }\n\n}\n"]}