{"version":3,"sources":["assets\\src\\brick\\BrickLayout.ts"],"names":[],"mappings":";;;;;;AAAM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAiC,+BAAY;IAA7C;QAAA,qEAuBC;QApBW,aAAO,GAAW,CAAC,CAAC;QAEpB,aAAO,GAAW,CAAC,CAAC;QAEpB,YAAM,GAAW,CAAC,CAAC;QAEnB,iBAAW,GAAc,IAAI,CAAC;QAE9B,cAAQ,GAAW,CAAC,CAAC;;IAYjC,CAAC;IAVG,0BAAI,GAAJ,UAAK,QAAQ;QACT,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,SAAS,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACjD,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;YAC7B,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;YACxG,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;SACxH;IACL,CAAC;IAnBD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;gDACS;IAE5B;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;gDACS;IAE5B;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;+CACM;IAE3B;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;oDACkB;IAEtC;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;iDACQ;IAXpB,WAAW;QADvB,OAAO;OACK,WAAW,CAuBvB;IAAD,kBAAC;CAvBD,AAuBC,CAvBgC,EAAE,CAAC,SAAS,GAuB5C;AAvBY,kCAAW","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport class BrickLayout extends cc.Component {\n\n    @property(cc.Float)\n    private padding: number = 0;\n    @property(cc.Float)\n    private spacing: number = 0;\n    @property(cc.Integer)\n    private colNum: number = 0;\n    @property(cc.Prefab)\n    private brickPrefab: cc.Prefab = null;\n    @property(cc.Integer)\n    private brickNum: number = 0;\n\n    init(brickNum) {\n        this.node.removeAllChildren();\n        this.brickNum = brickNum;\n        for (let i = 0; i < this.brickNum; i++) {\n            let brickNode = cc.instantiate(this.brickPrefab);\n            brickNode.parent = this.node;\n            brickNode.x = this.padding + (i % this.colNum) * (brickNode.width + this.spacing) + brickNode.width / 2;\n            brickNode.y = -this.padding - Math.floor(i / this.colNum) * (brickNode.height + this.spacing) - brickNode.height / 2;\n        }\n    }\n}"]}