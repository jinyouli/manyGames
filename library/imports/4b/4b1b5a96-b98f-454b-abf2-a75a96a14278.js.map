{"version":3,"sources":["assets\\src\\puzzle\\PuzzlePiece.ts"],"names":[],"mappings":";;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA2B,yBAAY;IAAvC;QAAA,qEA4CC;QAvCW,aAAO,GAAiB,IAAI,CAAC;;IAuCzC,CAAC;IAhCG,sBAAW,0BAAO;aAAlB;YACI,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC;QACtE,CAAC;;;OAAA;IAEM,oBAAI,GAAX,UAAY,GAAW,EAAE,GAAW,EAAE,MAAc,EAAE,QAAgB;QAClE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAElB,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAC/C,mBAAmB;QACnB,yDAAyD;QACzD,2CAA2C;QAC3C,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAClE,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACvC,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzC,IAAI,QAAQ,GAAG,GAAG,GAAG,YAAY,CAAC;QAClC,IAAI,QAAQ,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC;QAClD,IAAI,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;QACvE,uCAAuC;QACvC,MAAM,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAE/D,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QAE5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,KAAK,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;QAC/D,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SAC5B;IACL,CAAC;IArCD;QAHC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,SAAS;SACrB,CAAC;0CACmC;IAL5B,KAAK;QADjB,OAAO;OACK,KAAK,CA4CjB;IAAD,YAAC;CA5CD,AA4CC,CA5C0B,EAAE,CAAC,SAAS,GA4CtC;AA5CY,sBAAK","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport class Piece extends cc.Component {\n\n    @property({\n        type: cc.Texture2D\n    })\n    private texture: cc.Texture2D = null;\n\n    public oriCol: number;\n    public oriRow: number;\n    public curCol: number;\n    public curRow: number;\n    public isBlank: boolean;\n    public get isRight() {\n        return this.curCol === this.oriCol && this.curRow === this.oriRow;\n    }\n\n    public init(col: number, row: number, colNum: number, colWidth: number) {\n        this.oriCol = col;\n        this.oriRow = row;\n        this.curCol = col;\n        this.curRow = row;\n\n        let sprite = this.node.addComponent(cc.Sprite);\n        // 升级2.0后setRect失效 \n        // sprite.spriteFrame = new cc.SpriteFrame(this.texture);\n        // let rect = sprite.spriteFrame.getRect();\n        let rect = cc.rect(0, 0, this.texture.width, this.texture.height);\n        let newRectWidth = rect.width / colNum;\n        let newRectHeight = rect.height / colNum;\n        let newRectX = col * newRectWidth;\n        let newRectY = (colNum - row - 1) * newRectHeight;\n        let newRect = cc.rect(newRectX, newRectY, newRectWidth, newRectHeight);\n        // sprite.spriteFrame.setRect(newRect);\n        sprite.spriteFrame = new cc.SpriteFrame(this.texture, newRect);\n\n        this.node.width = colWidth;\n        this.node.height = colWidth;\n\n        this.isBlank = this.oriCol === colNum - 1 && this.oriRow === 0;\n        if (this.isBlank) {\n            this.node.active = false;\n        }\n    }\n\n}"]}